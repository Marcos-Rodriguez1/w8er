{"version":3,"sources":["recoil/ThemeState.js","components/buttons/ToggleButton.jsx","components/buttons/Button.jsx","components/inputs/FormInput.jsx","recoil/SidebarState.js","components/Example.jsx","components/DetailBit.jsx","components/inputs/SelectSlider.jsx","components/AddGuest.jsx","components/DrawerHeader.jsx","components/buttons/GlowButton.jsx","components/GuestItem.jsx","components/GuestList.jsx","components/FloorMapToolsDemo.jsx","utils/draggables.js","components/layout-tools/ToolStyles.js","components/layout-tools/Tool.jsx","components/FloorMapTools.jsx","components/Sidebar.jsx","components/Main.jsx","hooks/useRepeatLongPress.js","components/layout-tools/ToolNode.jsx","components/layout-tools/FloorMap.jsx","pages/SeatingLayout.jsx","pages/Settings.jsx","App.jsx","Theme.jsx","index.jsx"],"names":["themeState","atom","key","default","verticalOn","css","verticalOff","horizontalOn","horizontalOff","horizontal","vertical","ToggleContainer","styled","div","props","theme","colors","onBackground","rgba","orientation","ToggleButton","button","background","primary","ToggleInput","value","onClick","label","type","aria-pressed","className","circleBtn","regularBtn","ButtonContainer","reverse","onPrimary","secondary","Button","React","forwardRef","ref","text","icon","createElement","shrink","FormInputContainer","onSurface","InputField","input","InputLabel","error","VisibilityContainer","FormInput","id","handleChange","htmlFor","additionalInfo","disabled","useState","passwordVisible","setPasswordVisible","useEffect","Fragment","required","onChange","sidebarState","DetailBitContainer","DetailBit","textColor","shape","shapeColor","SelectSliderContainer","SelectSliderContainer2","OptionsDraggable","currentPosition","itemSelectedStyle","glow","surface","OptionItem","SelectSliderLabel","Shadow","SelectSlider","options","draggableRef","useRef","containerRef","mouseDowned","setMouseDowned","setCurrentPosition","x","y","dragStart","setDragStart","dragEnd","setDragEnd","itemSelected","setItemSelected","optionsWidth","current","offsetWidth","dragDifference","newPosition","finishDrag","e","clientX","clientY","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","touches","onTouchMove","map","item","i","spacing","AddGuestContainer","form","AddGuestButton","INITIAL_GUEST","name","party","phone","table","notes","tableAssigned","reserveTime","waitTime","seatedTime","departureTime","Date","PARTY_ARRAY","Array","keys","TABLE_ARRAY","array","randomLetter","String","fromCharCode","Math","floor","random","toUpperCase","randomNum","push","AddGuest","guest","setGuest","onSubmit","preventDefault","shortid","generate","console","log","toggleDrawer","target","val","pattern","HeaderContainer","outline","HeaderButton","openContent","rotation","getDynamicPadding","extraHeight","paddingTop","padding","contentPadding","DrawerContent","drawerStatus","height","headerHeight","DrawerHeader","headerTitle","drawerComponent1","drawerComponent2","handleChange1","handleChange2","drawerBtn1","setDrawerBtn1","drawerBtn2","setDrawerBtn2","setHeaderHeight","headerRef","cr1","useResizeObserver","cr2","clientHeight","toggleButton1","toggleButton2","newDrawerComponent1","newDrawerComponent2","isValidElement","cloneElement","buttonOpen","BsCaretDownFill","addGuestOpen","GoPlus","glowEffect","keyframes","GBContainer","GlowEffect","color","effectOpacity","BaseButton","GlowButton","charAt","ItemWrapper","li","GuestItemContainer","ItemDetails","itemExpand","fontColor","MainInfoWrapper","MainInfo","SubInfo","PhoneInfo","Notes","GuestTypeBit","toLowerCase","PartySizeBit","GuestItem","guestInfo","currentTime","line","setItemExpand","useTheme","getCurrentTimeDelta","time","currenttime","timeDelta","getTime","seated","ImCheckmark","correct","stopPropagation","datetime","date","getMonth","getDate","getFullYear","time12H","getHours","getMinutes","hours","minutes","ampm","slice","formatAMPM","formatReserveTime","phoneNumber","match","replace","formatPhone","require","GUESTLIST","test","GuestListContainer","sidebarOpen","ListContainer","ul","GLExtras","glExtrasOpen","Divider","expand","GuestList","guestList","setGuestList","seatedOpen","setSeatedOpen","mustServeOpen","setMustServeOpen","setCurrentTime","useRecoilValue","timer","setInterval","clearInterval","updateGuestItem","guestItem","deleteIndex","findIndex","updatedItems","length","sort","a","b","wtA","wtB","addGuestItem","filter","FMTContainer","drawOpen","Header","Square","Circle","greenStyle","MyButton","HiddenStuff","HeaderText","h1","FloorMapTools","green","setGreen","setExpand","ItemTypes","halfCircle","circle","lshape","ToolContainer","Shape","size","width","dimensions","gridUnit","rotateAngle","rectangle","overlayControls","RotateCCWControl","RotateCWControl","DecreaseSize","IncreaseSize","HiddenHack","selected","opacityStyle","Tool","info","useDrag","data","collect","monitor","isDragging","end","getDropResult","drag","coords","FMTContent","margin","position","sbClosed","sbOpened","pointLeft","pointRight","pointUp","pointDown","sidebarItemStyles","SidebarNav","SidebarContainer","navItemSelected","navBtnSize","ToggleSidebarButton","NavItemButton","index","Slider","navItems","component","IoMdListBox","link","BiCustomize","MdSettings","FloorMapToolsDemo","CgDebug","Sidebar","children","useRecoilState","setSidebarOpen","history","useHistory","themeToggle","toggleTheme","matches","window","innerWidth","mQuery","setMQuery","mediaQuery","matchMedia","addListener","removeListener","toggleSidebar","MdChevronRight","MainContent","main","Main","useRepeatLongPress","action","repeatInterval","longPressed","setLongPressed","repeatAction","setRepeatAction","actionRef","startLongPress","endLongPress","onTouchEnd","ToolNode","mode","rotateUnit","sizeUnit","setRotateAngle","setSize","cwLongPressAction","ccwLongPressAction","increaseSizePressActions","decreaseSizePressActions","elements","FloorMapContainer","DropTarget","nodeTypes","square","HiUser","FloorMap","reactFlow","setReactFlow","fmRef","offset","setOffset","items","setItems","endDropCoords","setEndDropCoords","useDrop","accept","componen","isOver","didDrop","getItem","drop","fin","getClientOffset","newItem","project","getBoundingClientRect","onLoad","reactFlowInstance","fitView","zoomTo","snapGrid","variant","gap","nodeColor","node","SeatingLayout","Settings","AppContainer","section","FlexWrapper","App","DndProvider","backend","HTML5Backend","content","basename","exact","path","baseFont","family","weight","themeDark","onSecondary","warning","font","themeLight","GlobalReset","styles","ThemedApp","lightTheme","ReactDOM","render","StrictMode","Theme","document","getElementById"],"mappings":"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","file":"static/js/main.d11d0dac.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const themeState = atom({\r\n  key: \"themeState\",\r\n  default: true,\r\n});\r\n","import React from \"react\";\r\nimport { MdBrightnessLow } from \"react-icons/md\";\r\nimport { rgba } from \"emotion-rgba\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n// export interface ToggleInputProps {\r\n//   value: boolean;\r\n//   onClick: () => {};\r\n//   label: string;\r\n\r\n//   // htmlFor: String;\r\n//   // label: String;\r\n// }\r\n\r\nconst verticalOn = css`\r\n  transform: translateY(0);\r\n`;\r\n\r\nconst verticalOff = css`\r\n  transform: translateY(100%);\r\n`;\r\n\r\nconst horizontalOn = css`\r\n  transform: translateX(0);\r\n`;\r\n\r\nconst horizontalOff = css`\r\n  transform: translateX(100%);\r\n`;\r\n\r\nconst horizontal = css`\r\n  width: 4.3rem;\r\n  height: 2.4rem;\r\n`;\r\n\r\nconst vertical = css`\r\n  width: 2.3rem;\r\n  height: 4.3rem;\r\n`;\r\n\r\nconst ToggleContainer = styled.div`\r\n  background-color: ${(props) => props.theme.colors.onBackground};\r\n  /* border: 1px solid ${({ theme }) =>\r\n    rgba(theme.colors.onBackground, 0.05)}; */\r\n\r\n  ${({ orientation }) => (orientation === \"vertical\" ? vertical : horizontal)}\r\n\r\n  padding: 0.15rem;\r\n  border-radius: 5rem;\r\n  /* margin: 0.25rem; */\r\n  /* margin: 0.25rem 0; */\r\n\r\n  .on {\r\n    ${({ orientation }) =>\r\n      orientation === \"vertical\" ? verticalOn : horizontalOn}\r\n  }\r\n\r\n  .off {\r\n    ${({ orientation }) =>\r\n      orientation === \"vertical\" ? verticalOff : horizontalOff}\r\n  }\r\n`;\r\n\r\nconst ToggleButton = styled.button`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => props.theme.colors.background};\r\n\r\n  font-size: 0px;\r\n\r\n  transition-property: transform, background-color;\r\n  transition-timing-function: ease-out;\r\n  transition-duration: 250ms;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst ToggleInput = ({ orientation, value, onClick, label, ...props }) => {\r\n  return (\r\n    <ToggleContainer {...props} orientation={orientation}>\r\n      <ToggleButton\r\n        type=\"button\"\r\n        aria-pressed={value}\r\n        onClick={onClick}\r\n        className={`${value ? \"on\" : \"off\"}`}\r\n      >\r\n        {label}\r\n      </ToggleButton>\r\n    </ToggleContainer>\r\n  );\r\n};\r\n\r\nexport default ToggleInput;\r\n","import React from \"react\";\r\n\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst btnSize = \"2.5rem\";\r\n\r\nconst textIconSeparator = (props) => css`\r\n  margin-right: 0.5rem;\r\n  ${console.log(\"propssss\", props)}\r\n`;\r\n\r\nconst circleBtn = css`\r\n  border-radius: 5rem;\r\n  width: ${btnSize};\r\n\r\n  .btn-text,\r\n  .btn-icon {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst regularBtn = css`\r\n  border-radius: 4px;\r\n  padding: 0 0.75rem;\r\n`;\r\n\r\nconst ButtonContainer = styled.button`\r\n  /* padding: 0 0.75rem; */\r\n  height: ${btnSize};\r\n  /* border-radius: 4px; */\r\n  background-color: ${(props) => props.theme.colors.primary};\r\n\r\n  display: flex;\r\n  /* flex-direction: column; */\r\n  flex-direction: ${({ reverse }) => (reverse ? \"row-reverse\" : \"row\")};\r\n  justify-content: center;\r\n\r\n  .btn-text {\r\n    height: 100%;\r\n    /* background-color: #fff; */\r\n\r\n    font-weight: bold;\r\n    text-transform: capitalize;\r\n    font-style: italic;\r\n    letter-spacing: 0px;\r\n    white-space: nowrap;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n\r\n  .btn-icon {\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    svg {\r\n      /* background-color: #fff; */\r\n      width: 1rem;\r\n      height: 1rem;\r\n\r\n      path {\r\n        fill: ${(props) => props.theme.colors.onPrimary};\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.secondary};\r\n  }\r\n`;\r\n\r\nconst Button = React.forwardRef(\r\n  ({ type, text, icon, reverse, ...props }, ref) => {\r\n    return (\r\n      <ButtonContainer\r\n        ref={ref}\r\n        {...props}\r\n        reverse={reverse}\r\n        css={type === \"circle\" ? circleBtn : regularBtn}\r\n      >\r\n        {text ? (\r\n          <span\r\n            className=\"btn-text\"\r\n            css={\r\n              icon && text\r\n                ? css`\r\n                    margin: ${reverse ? \"0 0 0 0.5rem\" : \"0 0.5rem 0 0\"};\r\n                  `\r\n                : null\r\n            }\r\n          >\r\n            {text}\r\n          </span>\r\n        ) : null}\r\n        {icon ? (\r\n          <span className=\"btn-icon\">{React.createElement(icon)}</span>\r\n        ) : null}\r\n      </ButtonContainer>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n// icons:\r\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\r\n\r\nconst shrink = (props) => css`\r\n  top: 0.25rem;\r\n  left: 0.2rem;\r\n\r\n  font-size: 0.9rem;\r\n\r\n  font-weight: bold;\r\n  color: ${props.theme.colors.onBackground};\r\n\r\n  letter-spacing: 0;\r\n  pointer-events: auto;\r\n`;\r\n\r\nconst FormInputContainer = styled.div`\r\n  position: relative;\r\n  /* outline: none; */\r\n  /* margin-top: 1.7rem; */\r\n  padding-top: 1.7rem;\r\n\r\n  /* height: 2.2rem; */\r\n  /* min-width: 10rem; */\r\n\r\n  input[type=\"password\"] {\r\n    letter-spacing: 0.15rem;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  input[type=\"datetime-local\"] {\r\n    color: ${({ theme, value }) => (value ? \"#111\" : theme.colors.onSurface)};\r\n\r\n    &:focus-within,\r\n    &:focus {\r\n      color: #111;\r\n    }\r\n  }\r\n\r\n  &:focus-within,\r\n  &:focus {\r\n    label {\r\n      ${shrink}\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  background-color: ${({ theme }) => theme.colors.onSurface};\r\n  height: 2.2rem;\r\n\r\n  width: 100%;\r\n  padding: 0 0.8rem;\r\n  border-radius: 4px;\r\n\r\n  color: black;\r\n  font-size: 1rem;\r\n  letter-spacing: 1px;\r\n\r\n  white-space: nowrap;\r\n\r\n  &:focus,\r\n  &:focus-within,\r\n  &:hover {\r\n    border-bottom: 4px solid ${(props) => props.theme.colors.primary};\r\n  }\r\n\r\n  &:read-only {\r\n    background-color: #ececec;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\n  text-transform: uppercase;\r\n  color: black;\r\n  font-size: 1rem;\r\n  font-weight: normal;\r\n  letter-spacing: 0.05rem;\r\n  white-space: nowrap;\r\n\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 0.6rem;\r\n  top: 2.1rem;\r\n\r\n  transition-property: top, left, font-size, font-weight, color, letter-spacing;\r\n  transition-duration: 200ms;\r\n  transition-timing-function: ease;\r\n\r\n  &.shrink {\r\n    ${shrink}\r\n  }\r\n\r\n  .required-asterisk {\r\n    font-weight: bold;\r\n    font-size: 1em;\r\n    color: ${(props) => props.theme.colors.error};\r\n  }\r\n\r\n  .additional-info {\r\n    color: inherit;\r\n    font-weight: bold;\r\n    font-style: italic;\r\n    text-transform: lowercase;\r\n\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nconst VisibilityContainer = styled.div`\r\n  cursor: pointer;\r\n\r\n  height: 100%;\r\n\r\n  margin-right: 0.5rem;\r\n\r\n  position: absolute;\r\n  bottom: -0.8rem;\r\n  right: 0;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    /* background-color: red; */\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n\r\n    path {\r\n      fill: #373e4d;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    svg {\r\n      path {\r\n        fill: $primary;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormInput = ({\r\n  id,\r\n  handleChange,\r\n  label,\r\n  className,\r\n  type,\r\n  htmlFor, // used for accessibility\r\n  additionalInfo,\r\n  disabled,\r\n  error,\r\n  value,\r\n  ...props\r\n}) => {\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  const determineInputType = () => {\r\n    if (type === \"password\" && passwordVisible === true) return \"text\";\r\n    else if (type === \"password\") return \"password\";\r\n    else return type;\r\n  };\r\n\r\n  return (\r\n    <FormInputContainer id={id} className={className} value={value}>\r\n      {label ? (\r\n        <InputLabel htmlFor={htmlFor} className={`${value ? \"shrink\" : \"\"}`}>\r\n          <React.Fragment>\r\n            {label}\r\n            {props.required ? (\r\n              <span className=\"required-asterisk\">*</span>\r\n            ) : null}\r\n            {additionalInfo ? (\r\n              <span className=\"additional-info\">{` ${additionalInfo}`}</span>\r\n            ) : null}\r\n          </React.Fragment>\r\n        </InputLabel>\r\n      ) : null}\r\n\r\n      {type !== \"textarea\" ? (\r\n        <InputField\r\n          {...props}\r\n          id={htmlFor}\r\n          type={determineInputType()}\r\n          onChange={handleChange}\r\n          disabled={disabled}\r\n          value={value}\r\n        ></InputField>\r\n      ) : null}\r\n\r\n      {type === \"password\" ? (\r\n        <VisibilityContainer onClick={togglePasswordVisibility}>\r\n          {passwordVisible ? <MdVisibilityOff /> : <MdVisibility />}\r\n        </VisibilityContainer>\r\n      ) : null}\r\n    </FormInputContainer>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { atom } from \"recoil\";\r\n\r\nexport const sidebarState = atom({\r\n  key: \"sidebarState\",\r\n  default: true,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n// custom components:\r\nimport Button from \"./buttons/Button\";\r\nimport FormInput from \"./inputs/FormInput\";\r\n\r\n// icons:\r\nimport { MdAdd } from \"react-icons/md\";\r\n\r\nconst ExampleContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst inputStyles = (theme) => css`\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 1rem;\r\n  input {\r\n    background-color: ${theme.colors.onSurface};\r\n  }\r\n`;\r\n\r\nconst buttonStyles = (theme) => css`\r\n  ${inputStyles(theme)}\r\n  width: 100%;\r\n\r\n  .btn-icon {\r\n    svg {\r\n      width: 1.5rem;\r\n      height: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Example = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n\r\n  useEffect(() => {}, [name, email, password, password2]);\r\n\r\n  return (\r\n    <ExampleContainer>\r\n      <FormInput\r\n        type=\"text\"\r\n        htmlFor=\"name\"\r\n        label=\"name\"\r\n        value={name}\r\n        handleChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        css={inputStyles}\r\n      />\r\n\r\n      <FormInput\r\n        required\r\n        type=\"email\"\r\n        htmlFor=\"email\"\r\n        label=\"email\"\r\n        value={email}\r\n        handleChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n        css={inputStyles}\r\n      />\r\n\r\n      <FormInput\r\n        required\r\n        type=\"password\"\r\n        htmlFor=\"password\"\r\n        label=\"password\"\r\n        value={password}\r\n        handleChange={(e) => {\r\n          setPassword(e.target.value);\r\n        }}\r\n        additionalInfo=\"(8 characters minimum)\"\r\n        css={inputStyles}\r\n      />\r\n\r\n      <FormInput\r\n        required\r\n        type=\"password\"\r\n        htmlFor=\"confirm password\"\r\n        label=\"confirm password\"\r\n        value={password2}\r\n        handleChange={(e) => {\r\n          setPassword2(e.target.value);\r\n        }}\r\n        css={inputStyles}\r\n      />\r\n\r\n      <Button text=\"waitlist\" icon={MdAdd} css={buttonStyles} />\r\n      <Button text=\"reservation\" icon={MdAdd} css={buttonStyles} />\r\n    </ExampleContainer>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n// const size = 1.7;\r\nconst size = 2;\r\n\r\nconst DetailBitContainer = styled.div`\r\n  /* width: 1.7rem;\r\n  height: 1.7rem;\r\n  min-width: 1.7rem;\r\n  min-height: 1.7rem; */\r\n  box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.2);\r\n\r\n  height: ${size}rem;\r\n  min-height: ${size}rem;\r\n  width: ${size}rem;\r\n  min-width: ${size}rem;\r\n\r\n  border-radius: 50%;\r\n\r\n  background-color: ${({ theme }) => theme.colors.onSurface};\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  p {\r\n    cursor: default;\r\n    color: black;\r\n    text-transform: uppercase;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 1rem;\r\n    user-select: none;\r\n  }\r\n`;\r\n\r\nconst DetailBit = ({ text, textColor, shape, shapeColor, ...props }) => {\r\n  return (\r\n    <DetailBitContainer {...props}>\r\n      <p>{text}</p>\r\n    </DetailBitContainer>\r\n  );\r\n};\r\n\r\nexport default DetailBit;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { rgba } from \"emotion-rgba\";\r\n\r\nconst SelectSliderContainer = styled.div`\r\n  /* margin-top: 2rem; */\r\n\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 4px;\r\n\r\n  padding: 5px;\r\n\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  position: relative;\r\n\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst SelectSliderContainer2 = styled.div`\r\n  width: 100%;\r\n  overflow-x: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst OptionsDraggable = styled.div`\r\n  display: flex;\r\n  transition: transform 200ms ease-out;\r\n\r\n  transform: translateX(${({ currentPosition }) => `${currentPosition}px`});\r\n`;\r\n\r\nconst itemSelectedStyle = ({ theme, glow }) => css`\r\n  background-color: ${glow ? theme.colors.primary : theme.colors.surface};\r\n  color: ${glow ? theme.colors.onPrimary : theme.colors.onBackground};\r\n`;\r\n\r\nconst OptionItem = styled.div`\r\n  ${itemSelectedStyle}\r\n\r\n  padding: 0.25rem .70rem;\r\n  border-radius: 3px;\r\n\r\n  margin-right: 4px;\r\n  user-select: none;\r\n\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    ${(props) => itemSelectedStyle({ ...props, glow: true })}\r\n  }\r\n`;\r\n\r\nconst SelectSliderLabel = styled.label`\r\n  z-index: 4;\r\n  color: ${({ theme }) => theme.colors.onBackground};\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 0.5rem;\r\n\r\n  margin-left: 0.4rem;\r\n\r\n  white-space: nowrap;\r\n\r\n  span {\r\n    font-weight: bold;\r\n\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst Shadow = styled.div`\r\n  z-index: 3;\r\n  background-color: #fff;\r\n  height: 100%;\r\n  width: 0;\r\n  position: absolute;\r\n\r\n  box-shadow: 0px 0px 20px 20px ${({ theme }) => theme.colors.background};\r\n\r\n  ${({ orientation }) =>\r\n    orientation === \"left\"\r\n      ? css`\r\n          left: 0;\r\n        `\r\n      : css`\r\n          right: 0;\r\n        `}\r\n`;\r\n\r\nconst SelectSlider = ({ label, options, handleChange, value, ...props }) => {\r\n  const draggableRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  const [mouseDowned, setMouseDowned] = useState(false);\r\n  const [currentPosition, setCurrentPosition] = useState(0);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const [dragEnd, setDragEnd] = useState({ x: 0, y: 0 });\r\n\r\n  const [itemSelected, setItemSelected] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // console.log(\"SELECT SLIDER\");\r\n\r\n    const optionsWidth =\r\n      draggableRef.current.offsetWidth - containerRef.current.offsetWidth;\r\n    const dragDifference = dragEnd.x - dragStart.x;\r\n    let newPosition = currentPosition + dragDifference;\r\n\r\n    if (newPosition > 0) newPosition = 0;\r\n    else if (newPosition < -1 * optionsWidth) newPosition = -1 * optionsWidth;\r\n    // console.log(\r\n    //   `drag.diff=${dragDifference} | oldPos=${currentPosition} | newPos=${newPosition} | width=${optionsWidth}`\r\n    // );\r\n\r\n    setCurrentPosition(newPosition);\r\n\r\n    // setCurrentPosition((currentPosition + (dragStart.x - dragEnd.x)) * 0.1);\r\n  }, [dragEnd]);\r\n\r\n  const finishDrag = (e) => {\r\n    setDragEnd({ x: e.clientX, y: e.clientY });\r\n    setMouseDowned(false);\r\n  };\r\n\r\n  return (\r\n    <SelectSliderContainer {...props}>\r\n      <Shadow orientation=\"left\"></Shadow>\r\n      <SelectSliderLabel>\r\n        {label}: <span>{value}</span>\r\n      </SelectSliderLabel>\r\n      <SelectSliderContainer2\r\n        ref={containerRef}\r\n        onMouseDown={(e) => {\r\n          setDragStart({ x: e.clientX, y: e.clientY });\r\n          setMouseDowned(true);\r\n        }}\r\n        onMouseUp={(e) => {\r\n          finishDrag(e);\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          if (mouseDowned) {\r\n            finishDrag(e);\r\n          }\r\n        }}\r\n        // onTouchStart and onTouchMove is required to register touch events on a mobile browser:\r\n        onTouchStart={(e) => {\r\n          setDragStart({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n        }}\r\n        onTouchMove={(e) => {\r\n          setDragEnd({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n        }}\r\n      >\r\n        <OptionsDraggable ref={draggableRef} currentPosition={currentPosition}>\r\n          {options.map((item, i) => (\r\n            <OptionItem\r\n              key={i}\r\n              glow={item === itemSelected}\r\n              onClick={() => {\r\n                setItemSelected(item);\r\n                handleChange(item);\r\n              }}\r\n            >\r\n              {item}\r\n            </OptionItem>\r\n          ))}\r\n        </OptionsDraggable>\r\n      </SelectSliderContainer2>\r\n      <Shadow orientation=\"right\" />\r\n    </SelectSliderContainer>\r\n  );\r\n};\r\n\r\nexport default SelectSlider;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { rgba } from \"emotion-rgba\";\r\n\r\n// custom components:\r\nimport FormInput from \"./inputs/FormInput\";\r\nimport Button from \"./buttons/Button\";\r\nimport SelectSlider from \"./inputs/SelectSlider\";\r\nimport shortid from \"shortid\";\r\n\r\nconst spacing = css`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst AddGuestContainer = styled.form`\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n  width: 100%;\r\n\r\n  color: ${({ theme }) => theme.colors.onBackground};\r\n`;\r\n\r\nconst AddGuestButton = styled(Button)`\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  width: 100%;\r\n\r\n  margin-top: 2.5rem;\r\n\r\n  color: ${({ theme }) => theme.colors.onBackground};\r\n\r\n  transition: height 200ms ease-out;\r\n\r\n  &:hover {\r\n    .btn-text {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst INITIAL_GUEST = {\r\n  name: \"\", // easy (completed)\r\n  party: \"\", // hard (completed)\r\n  phone: \"\", // hard\r\n  table: \"\", // hard (completed)\r\n  notes: \"\", // text area easy\r\n  tableAssigned: \"\",\r\n  reserveTime: \"\", // time that the guest reserves (use this variable to check if waitlist or reservation)\r\n  waitTime: \"\", // time that the guest STARTS waiting (when the entry is confirmed)\r\n  seatedTime: \"\", // time that the guest is seated\r\n  departureTime: new Date(), // time that the guest finishes eating and leaves\r\n};\r\n\r\nconst PARTY_ARRAY = [...Array(50).keys()];\r\nconst TABLE_ARRAY = (() => {\r\n  const array = [];\r\n\r\n  for (let i = 0; i < 25; i++) {\r\n    const randomLetter = String.fromCharCode(\r\n      Math.floor(Math.random() * (97 - 122) + 122)\r\n    ).toUpperCase();\r\n\r\n    const randomNum = Math.floor(Math.random() * (0 - 9) + 9);\r\n    array.push(`${randomLetter}${randomNum}`);\r\n  }\r\n\r\n  return array;\r\n})();\r\n\r\nconst AddGuest = React.forwardRef(({ handleChange, ...props }, ref) => {\r\n  const [guest, setGuest] = useState(INITIAL_GUEST);\r\n\r\n  return (\r\n    <AddGuestContainer\r\n      {...props}\r\n      ref={ref}\r\n      className=\"add-guest-container\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleChange({\r\n          ...guest,\r\n          id: shortid.generate(),\r\n          waitTime: guest.reserveTime\r\n            ? new Date(guest.reserveTime)\r\n            : new Date(),\r\n          reserveTime: guest.reserveTime ? new Date(guest.reserveTime) : \"\",\r\n        });\r\n        console.log(\"guest\", guest);\r\n\r\n        setGuest(INITIAL_GUEST);\r\n        if (props.toggleDrawer) props.toggleDrawer();\r\n      }}\r\n      onClick={() => {}}\r\n    >\r\n      <FormInput\r\n        required\r\n        type=\"text\"\r\n        htmlFor=\"name\"\r\n        label=\"name\"\r\n        value={guest.name}\r\n        handleChange={(e) => {\r\n          setGuest({ ...guest, name: e.target.value });\r\n        }}\r\n        css={spacing}\r\n      />\r\n\r\n      <SelectSlider\r\n        label=\"party size\"\r\n        options={PARTY_ARRAY}\r\n        value={guest.party}\r\n        handleChange={(val) => {\r\n          setGuest({ ...guest, party: val });\r\n        }}\r\n        css={spacing}\r\n      />\r\n\r\n      <FormInput\r\n        required\r\n        type=\"tel\"\r\n        htmlFor=\"phone number\"\r\n        label=\"phone number\"\r\n        value={guest.phone}\r\n        handleChange={(e) => {\r\n          setGuest({ ...guest, phone: e.target.value });\r\n        }}\r\n        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n        css={spacing}\r\n      />\r\n\r\n      <FormInput\r\n        type=\"text\"\r\n        htmlFor=\"notes\"\r\n        label=\"notes\"\r\n        value={guest.notes}\r\n        handleChange={(e) => {\r\n          setGuest({ ...guest, notes: e.target.value });\r\n        }}\r\n        css={spacing}\r\n        additionalInfo=\"(optional)\"\r\n      />\r\n\r\n      <FormInput\r\n        type=\"datetime-local\"\r\n        htmlFor=\"reservation time\"\r\n        label=\"reservation\"\r\n        value={guest.reserveTime}\r\n        handleChange={(e) => {\r\n          setGuest({ ...guest, reserveTime: e.target.value });\r\n        }}\r\n        css={spacing}\r\n        additionalInfo=\"(ignore if waitlist)\"\r\n      />\r\n\r\n      {guest.reserveTime && (\r\n        <SelectSlider\r\n          label=\"seating\"\r\n          options={TABLE_ARRAY}\r\n          value={guest.table}\r\n          handleChange={(val) => {\r\n            setGuest({ ...guest, table: val });\r\n          }}\r\n          // css={spacing}\r\n        />\r\n      )}\r\n\r\n      <AddGuestButton text=\"confirm guest\" />\r\n    </AddGuestContainer>\r\n  );\r\n});\r\n\r\nexport default AddGuest;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport useResizeObserver from \"use-resize-observer\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { rgba } from \"emotion-rgba\";\r\n\r\n// custom components:\r\nimport Button from \"./buttons/Button\";\r\n\r\n// icon:\r\nimport { BsCaretDownFill } from \"react-icons/bs\";\r\nimport { GoPlus } from \"react-icons/go\";\r\n\r\nconst contentPadding = 28;\r\n\r\nconst HeaderContainer = styled.div`\r\n  position: sticky;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 100; // must be higher than everything else\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n\r\n  box-shadow: inset 0px -1px 0px 0px ${({ theme }) => theme.colors.outline};\r\n\r\n  width: 100%;\r\n  height: 4.5rem;\r\n  min-height: 4.5rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border-bottom: 0.5rem solid ${({ theme }) => theme.colors.surface};\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.colors.onBackground};\r\n    font-size: 1.2rem;\r\n    text-transform: uppercase;\r\n\r\n    /* font-style: italic; */\r\n    letter-spacing: 2px;\r\n    font-weight: bold;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1;\r\n\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst HeaderButton = styled(Button)`\r\n  background-color: transparent;\r\n\r\n  border-radius: 0;\r\n\r\n  width: 4rem;\r\n  min-width: 4rem;\r\n  height: 4rem;\r\n  min-height: 4rem;\r\n\r\n  .btn-icon {\r\n    svg {\r\n      width: 1.5rem;\r\n      height: 1.5rem;\r\n      transition: transform 200ms ease-out;\r\n      transform: ${({ openContent, rotation = -180 }) =>\r\n        openContent ? css`rotate(${rotation}deg)` : css`rotate(0)`};\r\n      path {\r\n        fill: ${({ openContent, theme }) =>\r\n          !openContent ? theme.colors.onBackground : theme.colors.error};\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => rgba(\"black\", 0.1)};\r\n    .btn-icon {\r\n      svg {\r\n        path {\r\n          fill: ${({ openContent, theme }) =>\r\n            !openContent ? theme.colors.primary : theme.colors.error};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst getDynamicPadding = () => {\r\n  const paddingTop = contentPadding / 2;\r\n  const paddingRight = contentPadding;\r\n  const paddingBottom = contentPadding;\r\n  const paddingLeft = contentPadding;\r\n\r\n  const extraHeight = paddingTop + paddingBottom;\r\n  const padding = `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`;\r\n\r\n  return { extraHeight, padding };\r\n};\r\n\r\nconst DrawerContent = styled.div`\r\n  z-index: 0;\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n  width: 100%;\r\n\r\n  ${({ drawerStatus, headerHeight, height }) =>\r\n    drawerStatus\r\n      ? css`\r\n          height: ${height + getDynamicPadding().extraHeight}px;\r\n          min-height: ${height + getDynamicPadding().extraHeight}px;\r\n          padding: ${getDynamicPadding().padding};\r\n        `\r\n      : css`\r\n          height: 0;\r\n          min-height: 0;\r\n          padding: 0;\r\n        `}\r\n\r\n  border-bottom: ${({ theme, drawerStatus }) =>\r\n    drawerStatus ? `1px solid ${theme.colors.outline}` : 0};\r\n\r\n  & > * {\r\n    color: ${({ theme }) => theme.colors.onBackground};\r\n  }\r\n\r\n  transition-property: min-height, height, padding;\r\n  transition-duration: 200ms;\r\n  transition-timing-function: ease-out;\r\n\r\n  overflow: hidden;\r\n`;\r\n\r\nconst DrawerHeader = ({\r\n  headerTitle,\r\n  drawerComponent1,\r\n  drawerComponent2,\r\n  handleChange1 = () => {},\r\n  handleChange2 = () => {},\r\n  ...props\r\n}) => {\r\n  const [drawerBtn1, setDrawerBtn1] = useState(false);\r\n  const [drawerBtn2, setDrawerBtn2] = useState(false);\r\n\r\n  const [headerHeight, setHeaderHeight] = useState(0);\r\n  const headerRef = useRef(null);\r\n\r\n  const cr1 = useResizeObserver();\r\n  const cr2 = useResizeObserver();\r\n\r\n  useEffect(() => {\r\n    if (headerRef) setHeaderHeight(headerRef.current.clientHeight);\r\n  }, [headerRef]);\r\n\r\n  const toggleButton1 = () => {\r\n    // console.log(\"toggling btn 1\");\r\n    setDrawerBtn1(!drawerBtn1);\r\n    // handleChange1(!drawerBtn1);\r\n  };\r\n\r\n  const toggleButton2 = () => {\r\n    // console.log(\"toggling btn 2\");\r\n    setDrawerBtn2(!drawerBtn2);\r\n    // handleChange2(!drawerBtn2);\r\n  };\r\n\r\n  let newDrawerComponent1 = null;\r\n  let newDrawerComponent2 = null;\r\n\r\n  if (React.isValidElement(drawerComponent1)) {\r\n    newDrawerComponent1 = React.cloneElement(drawerComponent1, {\r\n      ref: cr1.ref,\r\n      toggleDrawer: toggleButton1,\r\n    });\r\n  }\r\n\r\n  if (React.isValidElement(drawerComponent2)) {\r\n    newDrawerComponent2 = React.cloneElement(drawerComponent2, {\r\n      ref: cr2.ref,\r\n      toggleDrawer: toggleButton2,\r\n    });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <HeaderContainer ref={headerRef}>\r\n        {newDrawerComponent1 && (\r\n          <div className=\"btn-container\">\r\n            <HeaderButton\r\n              type=\"circle\"\r\n              openContent={drawerBtn1}\r\n              buttonOpen={drawerBtn1}\r\n              icon={BsCaretDownFill}\r\n              css={css`\r\n                .btn-icon {\r\n                  svg {\r\n                    width: 1.2rem;\r\n                    height: 1.2rem;\r\n                  }\r\n                }\r\n              `}\r\n              onClick={() => {\r\n                toggleButton1();\r\n                setDrawerBtn2(false);\r\n                // handleChange2(false);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <h1>{headerTitle}</h1>\r\n        {newDrawerComponent2 && (\r\n          <div className=\"btn-container\">\r\n            <HeaderButton\r\n              type=\"circle\"\r\n              addGuestOpen={drawerBtn2}\r\n              openContent={drawerBtn2}\r\n              rotation={-135}\r\n              icon={GoPlus}\r\n              onClick={() => {\r\n                toggleButton2();\r\n                setDrawerBtn1(false);\r\n                // handleChange1(false);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </HeaderContainer>\r\n\r\n      {newDrawerComponent1 && (\r\n        <DrawerContent\r\n          headerHeight={headerHeight}\r\n          drawerStatus={drawerBtn1}\r\n          height={cr1.height}\r\n        >\r\n          {newDrawerComponent1}\r\n        </DrawerContent>\r\n      )}\r\n\r\n      {newDrawerComponent2 && (\r\n        <DrawerContent\r\n          headerHeight={headerHeight}\r\n          drawerStatus={drawerBtn2}\r\n          height={cr2.height}\r\n        >\r\n          {newDrawerComponent2}\r\n        </DrawerContent>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DrawerHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx, keyframes } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { rgba } from \"emotion-rgba\";\r\n\r\nconst glowEffect = keyframes`\r\n  from {\r\n    transform: scale(1);\r\n  }\r\n  to {\r\n    transform: scale(1.5);\r\n  }\r\n`;\r\n\r\nconst GBContainer = styled.button`\r\n  height: 2rem;\r\n  width: 2rem;\r\n  min-height: 2em;\r\n  min-width: 2rem;\r\n\r\n  position: relative;\r\n\r\n  background-color: transparent;\r\n\r\n  /* background-color: red; */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &:hover,\r\n  &:active {\r\n    div {\r\n      animation: none;\r\n      box-shadow: none;\r\n    }\r\n\r\n    .glow-effect {\r\n      transform: scale(1.5);\r\n    }\r\n  }\r\n`;\r\n\r\nconst GlowEffect = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 0;\r\n  animation: ${glowEffect} 1s ease infinite;\r\n  border-radius: 50%;\r\n  height: 2rem;\r\n  width: 2rem;\r\n  min-height: 2rem;\r\n  min-width: 2rem;\r\n\r\n  transition: none;\r\n  background-color: ${({ theme, color, effectOpacity }) =>\r\n    rgba(color ? color : theme.colors.primary, effectOpacity)};\r\n`;\r\n\r\nconst BaseButton = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  background-color: ${({ theme, color }) =>\r\n    color ? color : theme.colors.primary};\r\n  border-radius: 50%;\r\n\r\n  font-weight: bold;\r\n\r\n  box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.2);\r\n\r\n  height: 2rem;\r\n  width: 2rem;\r\n  min-height: 2rem;\r\n  min-width: 2rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst GlowButton = ({ text, icon, color, effectOpacity = 0.2, ...props }) => {\r\n  return (\r\n    <GBContainer {...props}>\r\n      <GlowEffect\r\n        className=\"glow-effect\"\r\n        color={color}\r\n        effectOpacity={effectOpacity}\r\n      ></GlowEffect>\r\n      <BaseButton color={color}>\r\n        {icon && React.createElement(icon)}\r\n        {!icon && text && text.charAt(0)}\r\n      </BaseButton>\r\n    </GBContainer>\r\n  );\r\n};\r\n\r\nexport default GlowButton;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { rgba } from \"emotion-rgba\";\r\n\r\n// custom components:\r\nimport Button from \"./buttons/Button\";\r\nimport GlowButton from \"./buttons/GlowButton\";\r\nimport DetailBit from \"./DetailBit\";\r\n\r\n// icons:\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { useTheme } from \"emotion-theming\";\r\n\r\nconst ItemWrapper = styled.li`\r\n  width: 100%;\r\n  margin: 0.25rem 0;\r\n`;\r\n\r\nconst GuestItemContainer = styled.div`\r\n  /* box-shadow: 0px 0px 7px 0px rgba(0,0,0,0.10); */\r\n\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  width: 100%;\r\n  padding: 0 0.75rem;\r\n  border-radius: 4px;\r\n  border-bottom-left-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n\r\n  cursor: pointer;\r\n\r\n  height: 3.5rem;\r\n  min-height: 3.5rem;\r\n\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  .guest-name {\r\n    cursor: inherit;\r\n\r\n    color: ${({ theme }) => theme.colors.onBackground};\r\n    /* font-style: italic; */\r\n    text-transform: capitalize;\r\n    flex: 1;\r\n\r\n    white-space: nowrap;\r\n\r\n    display: flex;\r\n    /* justify-content: center; */\r\n    margin-left: 2rem;\r\n    user-select: none;\r\n  }\r\n\r\n  .waited-time {\r\n    color: ${({ theme }) => theme.colors.onBackground};\r\n    font-style: italic;\r\n    user-select: none;\r\n  }\r\n`;\r\n\r\nconst ItemDetails = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n  height: ${({ itemExpand }) => (itemExpand ? \"24rem\" : 0)};\r\n  padding: ${({ itemExpand }) => (itemExpand ? \"1rem\" : 0)};\r\n\r\n  width: 100%;\r\n\r\n  border-bottom-left-radius: 4px;\r\n  border-bottom-right-radius: 4px;\r\n  border: 1px solid ${({ theme }) => theme.colors.outline};\r\n\r\n  overflow: hidden;\r\n  transition-property: height, padding;\r\n  transition-duration: 200ms;\r\n  transition-timing-function: ease-out;\r\n\r\n  color: ${({ theme }) => theme.colors.onBackground};\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst fontColor = css`\r\n  color: inherit;\r\n\r\n  .label,\r\n  .value {\r\n    color: inherit;\r\n  }\r\n\r\n  .label {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .value {\r\n    font-size: 1.05rem;\r\n  }\r\n`;\r\n\r\nconst spacing = css`\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst MainInfoWrapper = styled.div`\r\n  color: inherit;\r\n  width: 100%;\r\n  /* background-color: red; */\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  ${spacing};\r\n`;\r\n\r\nconst MainInfo = styled.div`\r\n  ${fontColor}\r\n\r\n  /* background-color: lightblue; */\r\n  flex: 1;\r\n\r\n  .value {\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst SubInfo = styled.div`\r\n  ${fontColor}\r\n  display: flex;\r\n\r\n  margin-bottom: 0.5rem;\r\n  .label,\r\n  .value {\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nconst PhoneInfo = styled.div`\r\n  ${fontColor}\r\n`;\r\n\r\nconst Notes = styled.div`\r\n  ${fontColor}\r\n  padding-top: 1rem;\r\n  border-top: 2px solid ${({ theme }) => theme.colors.outline};\r\n\r\n  .label {\r\n    margin-bottom: 0.5rem;\r\n  }\r\n\r\n  .value {\r\n    /* background-color: red; */\r\n    height: 6rem;\r\n    overflow: auto;\r\n  }\r\n`;\r\n\r\nconst GuestTypeBit = styled(DetailBit)`\r\n  border-radius: 4px;\r\n  /* margin-left: 0.4rem; */\r\n  cursor: inherit;\r\n\r\n  background-color: ${({ theme, text }) =>\r\n    text.toLowerCase() === \"r\" ? theme.colors.error : theme.colors.primary};\r\n\r\n  p {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst PartySizeBit = styled(DetailBit)`\r\n  cursor: inherit;\r\n\r\n  margin-left: 2rem;\r\n  background-color: ${({ theme }) => rgba(theme.colors.onBackground, 0.9)};\r\n  background-color: transparent;\r\n  box-shadow: none;\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.colors.onBackground};\r\n  }\r\n`;\r\n\r\nconst GuestItem = ({\r\n  guestInfo,\r\n  currentTime,\r\n  line,\r\n  handleChange = () => {},\r\n}) => {\r\n  const [itemExpand, setItemExpand] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  const getCurrentTimeDelta = (time) => {\r\n    const currenttime = currentTime ? currentTime : new Date();\r\n    const timeDelta = Math.floor(\r\n      (currenttime.getTime() - time.getTime()) / 1000\r\n    );\r\n\r\n    if (timeDelta < 60) return `< 1m`;\r\n    else if (timeDelta < 3600) return `${Math.floor(timeDelta / 60)}m`;\r\n    else\r\n      return `${Math.floor(timeDelta / 3600)}h ${Math.floor(timeDelta % 60)}m`;\r\n  };\r\n\r\n  const formatPhone = (phoneNumber) => {\r\n    var cleaned = (\"\" + phoneNumber).replace(/\\D/g, \"\");\r\n    var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\r\n\r\n    if (match) {\r\n      return \"(\" + match[1] + \") \" + match[2] + \" \" + match[3];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  function formatAMPM(date) {\r\n    var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = (\"0\" + minutes).slice(-2);\r\n    var strTime = hours + \":\" + minutes + ampm;\r\n    return strTime;\r\n  }\r\n\r\n  const formatReserveTime = (datetime) => {\r\n    const date =\r\n      datetime.getMonth() +\r\n      \".\" +\r\n      datetime.getDate() +\r\n      \".\" +\r\n      datetime.getFullYear();\r\n\r\n    const time24H = datetime.getHours() + \":\" + datetime.getMinutes();\r\n    const time12H = formatAMPM(datetime);\r\n\r\n    return date + \" @ \" + time12H;\r\n  };\r\n\r\n  return (\r\n    <ItemWrapper>\r\n      <GuestItemContainer\r\n        itemExpand={itemExpand}\r\n        onClick={(e) => {\r\n          setItemExpand(!itemExpand);\r\n        }}\r\n        // onTouchStart={() => {\r\n        //   setItemExpand(!itemExpand);\r\n        // }}\r\n      >\r\n        <GuestTypeBit text={guestInfo.reserveTime ? \"r\" : \"w\"} />\r\n        <PartySizeBit text={guestInfo.party} />\r\n        <p className=\"guest-name\">{guestInfo.name}</p>\r\n        {itemExpand && !guestInfo.seated && (\r\n          <GlowButton\r\n            icon={ImCheckmark}\r\n            color={theme.colors.correct}\r\n            effectOpacity={0.25}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              console.log(\"hellooooo\");\r\n              setItemExpand(!itemExpand);\r\n              handleChange({ ...guestInfo, seated: true });\r\n            }}\r\n          />\r\n        )}\r\n        {!itemExpand && (\r\n          <p className=\"waited-time\">\r\n            {getCurrentTimeDelta(guestInfo.waitTime)}\r\n          </p>\r\n        )}\r\n      </GuestItemContainer>\r\n      <ItemDetails itemExpand={itemExpand}>\r\n        <MainInfoWrapper>\r\n          <MainInfo>\r\n            {!guestInfo.reserveTime && (\r\n              <React.Fragment>\r\n                <p className=\"label\">Waited For:</p>\r\n                <p className=\"value\">\r\n                  {guestInfo.waitTime\r\n                    ? getCurrentTimeDelta(guestInfo.waitTime)\r\n                    : null}\r\n                </p>\r\n              </React.Fragment>\r\n            )}\r\n            {guestInfo.reserveTime && (\r\n              <React.Fragment>\r\n                <p className=\"label\">Reservation:</p>\r\n                <p className=\"value\">\r\n                  {formatReserveTime(guestInfo.reserveTime)}\r\n                </p>\r\n              </React.Fragment>\r\n            )}\r\n          </MainInfo>\r\n\r\n          {!guestInfo.reserveTime && (\r\n            <MainInfo>\r\n              <p className=\"label\"># in line:</p>\r\n              <p className=\"value\">{line ? line : \"Seated\"}</p>\r\n            </MainInfo>\r\n          )}\r\n        </MainInfoWrapper>\r\n        <SubInfo>\r\n          <p className=\"label\">Table Requested:</p>\r\n          <p className=\"value\">{guestInfo.table ? guestInfo.table : \"Any\"}</p>\r\n        </SubInfo>\r\n        <SubInfo css={spacing}>\r\n          <p className=\"label\">Table Assigned:</p>\r\n          <p className=\"value\">\r\n            {guestInfo.tableAssigned ? guestInfo.tableAssigned : \"N/A\"}\r\n          </p>\r\n        </SubInfo>\r\n        <PhoneInfo\r\n          css={css`\r\n            margin-bottom: 1rem;\r\n          `}\r\n        >\r\n          <SubInfo>\r\n            <p className=\"label\">Phone #:</p>\r\n            <p className=\"value\">{formatPhone(guestInfo.phone)}</p>\r\n          </SubInfo>\r\n        </PhoneInfo>\r\n        <Notes>\r\n          <p className=\"label\">Notes:</p>\r\n          <p className=\"value\">\r\n            {guestInfo.notes\r\n              ? guestInfo.notes\r\n              : \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Consectetur quaerat voluptas hic veniam quod maxime tempore labore modi unde iure fugiat alias pariatur quia sapiente laboriosam quo, nisi explicabo nulla.\"}\r\n          </p>\r\n        </Notes>\r\n      </ItemDetails>\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nexport default GuestItem;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { rgba } from \"emotion-rgba\";\r\n\r\n// state management:\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { sidebarState } from \"../recoil/SidebarState\";\r\n\r\n// custom components:\r\nimport Button from \"./buttons/Button\";\r\nimport DetailBit from \"./DetailBit\";\r\nimport AddGuest from \"./AddGuest\";\r\nimport DrawerHeader from \"./DrawerHeader\";\r\nimport GuestItem from \"./GuestItem\";\r\n\r\n// icon:\r\nimport { IoMdAddCircle } from \"react-icons/io\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { MdAddBox } from \"react-icons/md\";\r\nimport { FaCaretSquareDown } from \"react-icons/fa\";\r\nimport { AiOutlineCaretDown } from \"react-icons/ai\";\r\nimport { BsCaretDownFill } from \"react-icons/bs\";\r\nimport { GoPlus } from \"react-icons/go\";\r\n\r\nimport { MdExpandLess } from \"react-icons/md\";\r\n\r\nconst shortid = require(\"shortid\");\r\n\r\nconst GUESTLIST = [\r\n  {\r\n    test: new Date().getTime(),\r\n    waitTime: new Date(),\r\n    id: shortid.generate(),\r\n    seated: false,\r\n    name: \"Rezzy Recent\",\r\n    party: \"2\",\r\n    phone: \"555-555-4352\",\r\n    table: \"\",\r\n    notes: \"need 30 baby seats, dont ask\",\r\n    tableAssigned: \"\",\r\n    reserveTime: \"\",\r\n    seatedTime: \"\",\r\n    departureTime: \"\",\r\n  },\r\n  {\r\n    test: new Date(\"2020-10-10T03:32:00\").getTime(),\r\n    waitTime: new Date(\"2020-10-10T03:32:00\"),\r\n    id: shortid.generate(),\r\n    seated: false,\r\n    name: \"ricky  bobby\",\r\n    party: \"2\",\r\n    phone: \"555-555-4352\",\r\n    table: \"\",\r\n    notes: \"bring food\",\r\n    tableAssigned: \"\",\r\n    reserveTime: \"\",\r\n    seatedTime: \"\",\r\n    departureTime: \"\",\r\n  },\r\n  {\r\n    test: new Date(\"2020-09-09T03:56:00\").getTime(),\r\n    waitTime: new Date(\"2020-09-09T03:56:00\"),\r\n    id: shortid.generate(),\r\n    seated: false,\r\n    name: \"Lebron sucks\",\r\n    party: \"13\",\r\n    phone: \"310-135-4352\",\r\n    table: \"\",\r\n    notes: \"i'm thinking about dropping danny green for missing that last 3\",\r\n    tableAssigned: \"\",\r\n    reserveTime: \"\",\r\n    seatedTime: \"\",\r\n    departureTime: \"\",\r\n  },\r\n  {\r\n    test: new Date(\"2020-10-10T03:36:00\").getTime(),\r\n    waitTime: new Date(\"2020-10-10T03:36:00\"),\r\n    id: shortid.generate(),\r\n    seated: false,\r\n    name: \"michael jackson\",\r\n    party: \"4\",\r\n    phone: \"123-565-5685\",\r\n    table: \"\",\r\n    notes: \"\",\r\n    tableAssigned: \"\",\r\n    reserveTime: \"\",\r\n    seatedTime: \"\",\r\n    departureTime: \"\",\r\n  },\r\n  {\r\n    test: new Date(\"2020-10-10T03:14:00\").getTime(),\r\n    waitTime: new Date(\"2020-10-10T03:14:00\"),\r\n    id: shortid.generate(),\r\n    seated: false,\r\n    name: \"john cena\",\r\n    party: \"10\",\r\n    phone: \"565-565-7894\",\r\n    table: \"2A\",\r\n    notes: \"\",\r\n    tableAssigned: \"\",\r\n    reserveTime: new Date(),\r\n    seatedTime: \"\",\r\n    departureTime: \"\",\r\n  },\r\n  {\r\n    test: new Date(\"2020-10-10T03:26:00\").getTime(),\r\n    waitTime: new Date(\"2020-10-10T03:26:00\"),\r\n    id: shortid.generate(),\r\n    seated: false,\r\n    name: \"t pain\",\r\n    party: \"1\",\r\n    phone: \"456-789-1238\",\r\n    table: \"\",\r\n    notes: \"\",\r\n    tableAssigned: \"\",\r\n    reserveTime: \"\",\r\n\r\n    seatedTime: \"\",\r\n    departureTime: \"\",\r\n  },\r\n  {\r\n    test: new Date(\"2020-10-10T03:25:00\").getTime(),\r\n    waitTime: new Date(\"2020-10-10T03:25:00\"),\r\n    id: shortid.generate(),\r\n    seated: true,\r\n    name: \"t pain\",\r\n    party: \"1\",\r\n    phone: \"456-789-1238\",\r\n    table: \"\",\r\n    notes: \"\",\r\n    tableAssigned: \"\",\r\n    reserveTime: \"\",\r\n\r\n    seatedTime: \"\",\r\n    departureTime: \"\",\r\n  },\r\n];\r\n\r\nconst GuestListContainer = styled.div`\r\n  position: relative;\r\n  /* margin: 1rem; */\r\n  width: 100%;\r\n  height: 100%;\r\n  /* padding: 1rem; */\r\n\r\n  /* background-color: ${({ theme }) => theme.colors.background}; */\r\n  /* border-radius: 4px; */\r\n  overflow-y: auto;\r\n\r\n  /* HIDE BASED OFF sidebarOpen */\r\n  /* overflow-y: hidden; */\r\n  ${({ sidebarOpen }) =>\r\n    !sidebarOpen\r\n      ? css`\r\n          overflow-y: hidden;\r\n        `\r\n      : null}\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* justify-content: center; */\r\n  align-items: center;\r\n`;\r\n\r\nconst ListContainer = styled.ul`\r\n  width: 100%;\r\n  padding: 0 0.5rem;\r\n\r\n  /* flex: 1; */\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst GLExtras = styled.div`\r\n  width: 100%;\r\n  /* margin: 0 1rem; */\r\n\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n\r\n  color: ${({ theme }) => theme.colors.onBackground};\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* margin-top: ${({ glExtrasOpen }) => (glExtrasOpen ? \"1rem\" : \"0\")}; */\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  /* background-color: red; */\r\n  height: 2rem;\r\n  width: 100%;\r\n  padding: 0 0.5rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n  margin: 0.5rem 0;\r\n\r\n  .title {\r\n    white-space: nowrap;\r\n    height: 100%;\r\n    padding: 0 1rem;\r\n    border-radius: 5rem;\r\n    color: ${({ theme }) => theme.colors.onBackground};\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    font-weight: bold;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.outline};\r\n  }\r\n\r\n  .line {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    height: 3px;\r\n    flex: 1;\r\n    margin-left: 0.5rem;\r\n  }\r\n\r\n  button {\r\n    /* background-color: green; */\r\n    height: 2rem;\r\n    width: 2rem;\r\n    min-height: 2rem;\r\n    min-width: 2rem;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    color: ${({ theme }) => theme.colors.onBackground};\r\n    font-weight: bold;\r\n    margin-left: 0.5rem;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.outline};\r\n\r\n    svg {\r\n      /* border-radius: 50%; */\r\n\r\n      height: 1.8rem;\r\n      width: 1.8rem;\r\n\r\n      transition: transform 200ms ease-in-out;\r\n\r\n      transform: rotate(${({ expand }) => (expand ? 0 : -180)}deg);\r\n\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.onBackground};\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    .title {\r\n      color: ${({ theme }) => theme.colors.primary};\r\n    }\r\n    button {\r\n      color: ${({ theme }) => theme.colors.primary};\r\n\r\n      svg {\r\n        path {\r\n          fill: ${({ theme }) => theme.colors.primary};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GuestList = () => {\r\n  const [guestList, setGuestList] = useState(GUESTLIST);\r\n  const [seatedOpen, setSeatedOpen] = useState(GUESTLIST);\r\n  const [mustServeOpen, setMustServeOpen] = useState(GUESTLIST);\r\n  const [currentTime, setCurrentTime] = useState(false);\r\n  const sidebarOpen = useRecoilValue(sidebarState);\r\n\r\n  useEffect(() => {\r\n    let timer = null;\r\n\r\n    timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 60000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  const addGuestItem = (guestItem) => {\r\n    setGuestList([...guestList, guestItem]);\r\n  };\r\n\r\n  const updateGuestItem = (guestItem) => {\r\n    const deleteIndex = guestList.findIndex(\r\n      (guest, i) => guest.id === guestItem.id\r\n    );\r\n\r\n    const updatedItems = [\r\n      ...guestList.slice(0, deleteIndex),\r\n      ...guestList.slice(deleteIndex + 1, guestList.length),\r\n      guestItem,\r\n    ].sort((a, b) => {\r\n      const wtA = a.waitTime.getTime();\r\n      const wtB = b.waitTime.getTime();\r\n\r\n      if (wtA > wtB) return 1;\r\n      else if (wtA < wtB) return -1;\r\n      else return 0;\r\n    });\r\n\r\n    setGuestList(updatedItems);\r\n  };\r\n\r\n  return (\r\n    <GuestListContainer sidebarOpen={sidebarOpen}>\r\n      <DrawerHeader\r\n        headerTitle=\"Guest list\"\r\n        drawerComponent1={\r\n          <GLExtras>filter, sort, other extra features here</GLExtras>\r\n        }\r\n        drawerComponent2={\r\n          <AddGuest\r\n            handleChange={(guestItem) => {\r\n              addGuestItem(guestItem);\r\n              // setAddGuestOpen(false);\r\n            }}\r\n            // addGuestOpen={addGuestOpen}\r\n          />\r\n        }\r\n        // handleChange1={(state) => setGlExtrasOpen(state)}\r\n        // handleChange2={(state) => setAddGuestOpen(state)}\r\n      />\r\n      <Divider\r\n        expand={mustServeOpen}\r\n        onClick={() => {\r\n          setMustServeOpen(!mustServeOpen);\r\n        }}\r\n      >\r\n        <h2 className=\"title\">Must Serve</h2>\r\n        <button>{guestList.filter((guest) => !guest.seated).length}</button>\r\n        <div className=\"line\"></div>\r\n\r\n        <button>\r\n          <MdExpandLess />\r\n        </button>\r\n      </Divider>\r\n      {mustServeOpen && (\r\n        <ListContainer className=\"guest-list\">\r\n          {guestList\r\n            .filter((guest) => !guest.seated)\r\n            .map((guest, i) => (\r\n              <GuestItem\r\n                key={guest.id}\r\n                line={i + 1}\r\n                guestInfo={guest}\r\n                currentTime={currentTime}\r\n                handleChange={updateGuestItem}\r\n              />\r\n            ))}\r\n        </ListContainer>\r\n      )}\r\n      <Divider\r\n        expand={seatedOpen}\r\n        onClick={() => {\r\n          setSeatedOpen(!seatedOpen);\r\n        }}\r\n      >\r\n        <h2 className=\"title\">Seated</h2>\r\n        <button>{guestList.filter((guest) => guest.seated).length}</button>\r\n        <div className=\"line\"></div>\r\n        <button>\r\n          <MdExpandLess />\r\n        </button>\r\n      </Divider>\r\n      {seatedOpen && (\r\n        <ListContainer className=\"guest-list\">\r\n          {guestList\r\n            .filter((guest) => guest.seated)\r\n            .map((guest, i) => (\r\n              <GuestItem\r\n                key={guest.id}\r\n                guestInfo={guest}\r\n                currentTime={currentTime}\r\n                handleChange={updateGuestItem}\r\n              />\r\n            ))}\r\n        </ListContainer>\r\n      )}\r\n    </GuestListContainer>\r\n  );\r\n};\r\n\r\nexport default GuestList;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst FMTContainer = styled.div`\r\n  background-color: ${(props) => props.theme.colors.primary};\r\n  background-color: ${({ theme, drawOpen }) =>\r\n    drawOpen ? \"red\" : theme.colors.primary};\r\n\r\n  background-color: ${(props) =>\r\n    props.drawOpen ? \"red\" : props.theme.colors.primary};\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  /* container */\r\n  display: flex;\r\n\r\n  /* row => main axis = x => sub axis = y */\r\n  /* column => main axis = y => sub axis = x */\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  background-color: #fff;\r\n\r\n  width: 100%;\r\n\r\n  height: 5rem;\r\n  min-height: 5rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Square = styled.div`\r\n  width: 5rem;\r\n  height: 5rem;\r\n\r\n  background-color: #fff;\r\n  margin: 0.5rem;\r\n\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  border-radius: 50%;\r\n  width: 5rem;\r\n  height: 5rem;\r\n  margin: 0.5rem;\r\n\r\n  background-color: #fff;\r\n`;\r\n\r\nconst greenStyle = css`\r\n  background-color: green;\r\n`;\r\n\r\nconst MyButton = styled.button`\r\n  width: 5rem;\r\n  height: 5rem;\r\n  background-color: red;\r\n  color: black;\r\n`;\r\n\r\nconst HiddenStuff = styled.div`\r\n  ${(props) => {\r\n    console.log(\"------------\", props);\r\n  }}\r\n\r\n  transition: height 200ms linear;\r\n\r\n  height: ${(props) => (props.expand ? \"20rem\" : \"0\")};\r\n  width: 100%;\r\n  background-color: green;\r\n`;\r\n\r\nconst HeaderText = styled.h1`\r\n  background-color: blue;\r\n  height: 3rem;\r\n  flex: 1;\r\n`;\r\n\r\nconst FloorMapTools = ({ color, ...props }) => {\r\n  const [green, setGreen] = useState(false);\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  return (\r\n    <FMTContainer className=\"flex-container\">\r\n      <Header className=\"header\">\r\n        <HeaderText>Floor Map Tools</HeaderText>\r\n        <MyButton\r\n          onClick={() => {\r\n            setExpand(!expand);\r\n          }}\r\n        ></MyButton>\r\n      </Header>\r\n      <HiddenStuff expand={expand} />\r\n\r\n      <Square className=\"flex-child\">\r\n        <div>lskjdflksdjf</div>\r\n      </Square>\r\n      <Square\r\n        className=\"flex-child\"\r\n        css={green ? greenStyle : null}\r\n        onClick={() => {\r\n          // console.log(\"lsdjf\");\r\n          setGreen(!green);\r\n        }}\r\n      />\r\n      <Circle\r\n        css={green ? greenStyle : null}\r\n        className=\"flex-child\"\r\n        onClick={() => {\r\n          console.log();\r\n        }}\r\n      />\r\n    </FMTContainer>\r\n  );\r\n};\r\n\r\nexport default FloorMapTools;\r\n","export const ItemTypes = {\r\n  TOOL: \"tool\",\r\n};\r\n","// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst halfCircle = css`\r\n  clip-path: circle(50.2% at 50% 0);\r\n  /* clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%); */\r\n`;\r\n\r\nconst circle = css`\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst lshape = css`\r\n  clip-path: polygon(0 0, 50% 0, 50% 50%, 100% 50%, 100% 100%, 0 100%);\r\n`;\r\n\r\nconst rectangle = (theme, size) => css`\r\n  width: ${size ? size.width / 2 : (theme.dimensions.gridUnit / 2) * 3}px;\r\n`;\r\n\r\nconst ToolContainer = styled.div``;\r\n\r\nconst Shape = styled.div`\r\n  position: relative;\r\n\r\n  width: ${({ theme, size }) =>\r\n    size ? size.width : theme.dimensions.gridUnit * 3}px;\r\n  height: ${({ theme, size }) =>\r\n    size ? size.height : theme.dimensions.gridUnit * 3}px;\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n\r\n  border: 1px solid ${({ theme }) => theme.colors.onBackground};\r\n  /* border: 1px solid red; */\r\n\r\n  transform: rotate(${({ rotateAngle }) => rotateAngle}deg);\r\n\r\n  transition-property: transform, width, height;\r\n  transition-duration: 200ms;\r\n  transition-timing-function: linear;\r\n\r\n  cursor: move;\r\n\r\n  &:active {\r\n    background-color: red;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n  }\r\n\r\n  ${({ type, theme, size }) => {\r\n    switch (type) {\r\n      case \"square\":\r\n        return null;\r\n      case \"circle\":\r\n        return circle;\r\n      case \"halfCircle\":\r\n        return halfCircle;\r\n      case \"lshape\":\r\n        return lshape;\r\n      case \"rectangle\":\r\n        return rectangle(theme, size);\r\n      default:\r\n        return null;\r\n    }\r\n  }}\r\n`;\r\n\r\nconst overlayControls = (theme) => css`\r\n  position: absolute;\r\n  background-color: transparent;\r\n\r\n  top: -3rem;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    path {\r\n      fill: ${theme.colors.onBackground};\r\n    }\r\n  }\r\n`;\r\n\r\nconst RotateCCWControl = styled.button`\r\n  ${({ theme }) => overlayControls(theme)}\r\n  left: 0;\r\n`;\r\n\r\nconst RotateCWControl = styled.button`\r\n  ${({ theme }) => overlayControls(theme)}\r\n  left: 3rem;\r\n`;\r\n\r\nconst DecreaseSize = styled.button`\r\n  ${({ theme }) => overlayControls(theme)}\r\n  left:6rem;\r\n`;\r\n\r\nconst IncreaseSize = styled.button`\r\n  ${({ theme }) => overlayControls(theme)}\r\n  left: 9rem;\r\n`;\r\n\r\n/* \r\n  this hidden hack was made because using the prop \"selected\" to conditionally render\r\n  the four controls (+, -, cw, ccw) made it so that the controls did not fire onTouchStart\r\n  or any event on MOBILE; it still worked as normal on desktop or minimized desktop.\r\n*/\r\nconst HiddenHack = styled.div`\r\n  ${({ selected }) =>\r\n    !selected\r\n      ? css`\r\n          display: none;\r\n        `\r\n      : null}\r\n`;\r\n\r\nconst opacityStyle = css`\r\n  /* opacity: 0.5; */\r\n  background-color: red;\r\n`;\r\n\r\nexport {\r\n  ToolContainer,\r\n  opacityStyle,\r\n  Shape,\r\n  RotateCWControl,\r\n  RotateCCWControl,\r\n  IncreaseSize,\r\n  DecreaseSize,\r\n  HiddenHack,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { ItemTypes } from \"../../utils/draggables\";\r\nimport { Shape, opacityStyle } from \"./ToolStyles\";\r\n\r\nconst Tool = ({ type = \"square\", info, ...props }) => {\r\n  const [{ isDragging, end, coords, ...dragProps }, drag] = useDrag({\r\n    item: { type: ItemTypes.TOOL, data: info },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n      end: monitor.getDropResult(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Shape\r\n      {...props}\r\n      info={info}\r\n      ref={drag}\r\n      type={type}\r\n      css={isDragging ? opacityStyle : null}\r\n    ></Shape>\r\n  );\r\n};\r\n\r\nexport default Tool;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { rgba } from \"emotion-rgba\";\r\n\r\n// custom components:\r\nimport Button from \"./buttons/Button\";\r\nimport DetailBit from \"./DetailBit\";\r\nimport AddGuest from \"./AddGuest\";\r\nimport DrawerHeader from \"./DrawerHeader\";\r\nimport Tool from \"./layout-tools/Tool\";\r\n\r\n// icon:\r\nimport { IoMdAddCircle } from \"react-icons/io\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { MdAddBox } from \"react-icons/md\";\r\nimport { FaCaretSquareDown } from \"react-icons/fa\";\r\nimport { AiOutlineCaretDown } from \"react-icons/ai\";\r\nimport { BsCaretDownFill } from \"react-icons/bs\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { useRef } from \"react\";\r\n\r\nconst FMTContainer = styled.div`\r\n  position: relative;\r\n  /* margin: 1rem; */\r\n  width: 100%;\r\n  height: 100%;\r\n  /* padding: 1rem; */\r\n\r\n  /* background-color: ${({ theme }) => theme.colors.background}; */\r\n  /* border-radius: 4px; */\r\n  overflow-y: auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* justify-content: center; */\r\n  align-items: center;\r\n\r\n  .add-btn-container {\r\n    width: 100%;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst FMTContent = styled.ul`\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n\r\n  /* flex: 1; */\r\n  margin-top: 1.5rem;\r\n\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst GLExtras = styled.div`\r\n  width: 100%;\r\n  /* margin: 0 1rem; */\r\n\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n\r\n  color: ${({ theme }) => theme.colors.onBackground};\r\n\r\n  /* display: flex;\r\n  justify-content: center;\r\n  align-items: center; */\r\n  /* margin-top: ${({ glExtrasOpen }) => (glExtrasOpen ? \"1rem\" : \"0\")}; */\r\n`;\r\n\r\nconst margin = css`\r\n  margin: 1rem;\r\n`;\r\n\r\nconst FloorMapTools = () => {\r\n  return (\r\n    <FMTContainer>\r\n      <DrawerHeader headerTitle=\"Floor Map Tools\" />\r\n\r\n      <FMTContent className=\"floor-map-tools-content\">\r\n        <Tool\r\n          type=\"square\"\r\n          info={{ id: \"\", data: { type: \"square\" }, position: { x: 0, y: 0 } }}\r\n          css={margin}\r\n        />\r\n        <Tool\r\n          type=\"circle\"\r\n          info={{ id: \"\", data: { type: \"circle\" }, position: { x: 0, y: 0 } }}\r\n          css={margin}\r\n        />\r\n        <Tool\r\n          type=\"halfCircle\"\r\n          info={{\r\n            id: \"\",\r\n            data: { type: \"halfCircle\" },\r\n            position: { x: 0, y: 0 },\r\n          }}\r\n          css={margin}\r\n        />\r\n\r\n        <Tool\r\n          type=\"lshape\"\r\n          info={{ id: \"\", data: { type: \"lshape\" }, position: { x: 0, y: 0 } }}\r\n          css={margin}\r\n        />\r\n\r\n        <Tool\r\n          type=\"rectangle\"\r\n          info={{\r\n            id: \"\",\r\n            data: { type: \"rectangle\" },\r\n            position: { x: 0, y: 0 },\r\n          }}\r\n          css={margin}\r\n        />\r\n      </FMTContent>\r\n    </FMTContainer>\r\n  );\r\n};\r\n\r\nexport default FloorMapTools;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { ReactFlowProvider } from \"react-flow-renderer\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { rgba } from \"emotion-rgba\";\r\n\r\n// state management:\r\nimport { useRecoilState } from \"recoil\";\r\nimport { themeState } from \"../recoil/ThemeState\";\r\nimport { sidebarState } from \"../recoil/SidebarState\";\r\n\r\n// custom components:\r\nimport Button from \"./buttons/Button\";\r\nimport ToggleButton from \"./buttons/ToggleButton\";\r\nimport Example from \"./Example\";\r\nimport GuestList from \"./GuestList\";\r\nimport FloorMapToolsDemo from \"./FloorMapToolsDemo\";\r\nimport FloorMapTools from \"./FloorMapTools\";\r\nimport Tool from \"./layout-tools/Tool\";\r\n\r\n// icons:\r\nimport { MdChevronRight } from \"react-icons/md\";\r\nimport { MdSettings } from \"react-icons/md\";\r\nimport { IoMdListBox } from \"react-icons/io\";\r\nimport { BiCustomize } from \"react-icons/bi\";\r\nimport { CgDebug } from \"react-icons/cg\";\r\n\r\nconst sbClosed = css`\r\n  width: 0;\r\n  min-width: 0;\r\n  max-width: 0;\r\n\r\n  @media (max-width: 500px) {\r\n    width: 100%;\r\n    min-width: 100%;\r\n    max-width: 100%;\r\n\r\n    height: 0;\r\n    min-height: 0;\r\n    max-height: 0;\r\n  }\r\n`;\r\n\r\nconst sbOpened = css`\r\n  width: 25rem;\r\n  min-width: 25rem;\r\n  max-width: 25rem;\r\n\r\n  @media (max-width: 500px) {\r\n    width: 100%;\r\n    min-width: 100%;\r\n    max-width: 100%;\r\n\r\n    min-height: 0;\r\n    max-height: 65%; // needed for transition to take effect\r\n  }\r\n`;\r\n\r\nconst pointLeft = css`\r\n  transform: rotate(-180deg);\r\n`;\r\nconst pointRight = css`\r\n  transform: rotate(0deg);\r\n`;\r\nconst pointUp = css`\r\n  transform: rotate(-90deg);\r\n`;\r\nconst pointDown = css`\r\n  transform: rotate(90deg);\r\n`;\r\n\r\nconst sidebarItemStyles = css`\r\n  margin-top: 1rem;\r\n  @media (max-width: 500px) {\r\n    margin-top: 0;\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst SidebarNav = styled.div`\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n  /* background-color: red; */\r\n\r\n  z-index: 3;\r\n\r\n  /* min-width: 4rem;\r\n  max-width: 4rem; */\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  @media (max-width: 500px) {\r\n    height: 4rem;\r\n    min-height: 4rem;\r\n\r\n    flex-direction: row;\r\n\r\n    margin: 0 auto;\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nconst SidebarContainer = styled.div`\r\n  z-index: 2;\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n\r\n  border-left: 1px solid ${({ theme }) => theme.colors.outline};\r\n  @media (max-width: 500px) {\r\n    border-left: 0;\r\n    border-top: 1px solid ${({ theme }) => theme.colors.outline};\r\n  }\r\n\r\n  ${({ sidebarOpen }) => (sidebarOpen ? sbOpened : sbClosed)}\r\n\r\n  padding-bottom: ${({ sidebarOpen }) => (sidebarOpen ? \"0.5rem\" : 0)};\r\n  box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.1);\r\n  overflow-x: hidden;\r\n\r\n  transition-property: max-width, min-width, max-height, min-height, padding;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: ease-out;\r\n`;\r\n\r\nconst navItemSelected = (props) => css`\r\n  background-color: ${props.theme.colors.background};\r\n  .btn-icon {\r\n    svg {\r\n      path {\r\n        fill: ${props.theme.colors.primary};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst navBtnSize = ({ theme }) => css`\r\n  width: 4rem;\r\n  height: 4rem;\r\n  border-radius: 0;\r\n  background-color: transparent;\r\n\r\n  .btn-icon {\r\n    svg {\r\n      path {\r\n        fill: ${theme.colors.onBackground};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToggleSidebarButton = styled(Button)`\r\n  ${navBtnSize}\r\n\r\n  &:hover {\r\n    ${navItemSelected}\r\n  }\r\n\r\n  .btn-icon {\r\n    svg {\r\n      width: 1.8rem;\r\n      height: 1.8rem;\r\n\r\n      transition: transform 250ms ease-out;\r\n\r\n      ${({ sidebarOpen }) => (sidebarOpen ? pointLeft : pointRight)}\r\n      @media (max-width: 500px) {\r\n        ${({ sidebarOpen }) => (sidebarOpen ? pointUp : pointDown)}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavItemButton = styled(Button)`\r\n  ${navBtnSize}\r\n\r\n  /* ${sidebarItemStyles} */\r\n\r\n  ${({ itemSelected, index }) =>\r\n    itemSelected === index ? navItemSelected : null}\r\n  \r\n  .btn-icon {\r\n    svg {\r\n      width: 1.5rem;\r\n      height: 1.5rem;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    ${navItemSelected}\r\n  }\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  height: 4rem;\r\n  width: 3px;\r\n  right: 0;\r\n  position: absolute;\r\n\r\n  transform: translateY(\r\n    ${({ itemSelected }) => `${4 * (itemSelected + 1)}rem`}\r\n  );\r\n\r\n  transition: transform ease-out 200ms;\r\n\r\n  @media (max-width: 500px) {\r\n    height: 3px;\r\n    width: 4rem;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: none;\r\n\r\n    transform: translateX(\r\n      ${({ itemSelected }) => `${4 * (itemSelected + 1)}rem`}\r\n    );\r\n  }\r\n`;\r\n\r\nconst navItems = [\r\n  {\r\n    component: <GuestList />,\r\n    // componentHeader: <FloorMapHeader />,\r\n    icon: IoMdListBox,\r\n    link: \"\",\r\n  },\r\n  {\r\n    // component: (\r\n    //   <Tool\r\n    //     info={{ id: \"\", data: {}, dropped: false, coordinates: { x: 0, y: 0 } }}\r\n    //   />\r\n    // ),\r\n\r\n    component: <FloorMapTools />,\r\n    // componentHeader: <FloorMapHeader />,\r\n    icon: BiCustomize,\r\n    link: \"/seating-layout\",\r\n  },\r\n  {\r\n    // component: <Button text=\"hello\" />,\r\n    // componentHeader: \"<FriendslistSidebarHeader />\",\r\n    icon: MdSettings,\r\n    link: \"/settings\",\r\n  },\r\n  {\r\n    component: <FloorMapToolsDemo />,\r\n    // componentHeader: \"<FriendslistSidebarHeader />\",\r\n    icon: CgDebug,\r\n  },\r\n];\r\n\r\nconst Sidebar = ({ children, ...props }) => {\r\n  // const [sidebarOpen, setSidebarOpen] = useState(true);\r\n  const [sidebarOpen, setSidebarOpen] = useRecoilState(sidebarState);\r\n  const [itemSelected, setItemSelected] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  const [themeToggle, toggleTheme] = useRecoilState(themeState);\r\n  const [mQuery, setMQuery] = useState({\r\n    matches: window.innerWidth > 500 ? false : true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let mediaQuery = window.matchMedia(\"(max-width: 500px)\");\r\n    mediaQuery.addListener(setMQuery);\r\n\r\n    return () => mediaQuery.removeListener(setMQuery);\r\n  }, [sidebarOpen]);\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n  };\r\n\r\n  const openSidebar = () => {\r\n    setSidebarOpen(true);\r\n  };\r\n\r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReactFlowProvider>\r\n        <SidebarNav className=\"sb-nav\">\r\n          <Slider itemSelected={itemSelected} />\r\n          <ToggleSidebarButton\r\n            type=\"circle\"\r\n            icon={MdChevronRight}\r\n            onClick={() => {\r\n              if (itemSelected === 2) {\r\n                setItemSelected(0);\r\n              }\r\n              toggleSidebar();\r\n            }}\r\n            sidebarOpen={sidebarOpen}\r\n          />\r\n          {navItems.map((item, i) => (\r\n            <div key={i}>\r\n              <NavItemButton\r\n                itemSelected={itemSelected}\r\n                // settingsSelected={settingsSelected}\r\n                index={i}\r\n                type=\"circle\"\r\n                icon={item.icon}\r\n                onClick={() => {\r\n                  if (itemSelected === i && item.component) {\r\n                    toggleSidebar();\r\n                  } else if (item.component) {\r\n                    openSidebar();\r\n                  } else {\r\n                    closeSidebar();\r\n                  }\r\n                  setItemSelected(i);\r\n\r\n                  if (item.link || item.link !== \"\") history.push(item.link);\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n          <ToggleButton\r\n            orientation={`${mQuery.matches ? \"horizontal\" : \"vertical\"}`}\r\n            label=\"theme\"\r\n            value={themeToggle}\r\n            onClick={() => toggleTheme(!themeToggle)}\r\n            css={sidebarItemStyles}\r\n          />\r\n        </SidebarNav>\r\n        <SidebarContainer\r\n          sidebarOpen={sidebarOpen}\r\n          className=\"sb-container\"\r\n          css={sidebarOpen ? sbOpened : sbClosed}\r\n        >\r\n          {navItems[itemSelected].component}\r\n        </SidebarContainer>\r\n      </ReactFlowProvider>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst MainContent = styled.main`\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  /* padding: 1rem; */\r\n  /* margin: 1rem; */\r\n\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 4rem;\r\n\r\n  & > * {\r\n    color: ${({ theme }) => theme.colors.onBackground};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    width: 100%;\r\n    min-width: 100%;\r\n    max-width: 100%;\r\n\r\n    flex: 1;\r\n\r\n    top: 4rem;\r\n    left: 0;\r\n  }\r\n\r\n  /* display: flex;\r\n  justify-content: center;\r\n  align-items: center; */\r\n`;\r\n\r\nconst Main = ({ children, ...props }) => {\r\n  return <MainContent {...props}>{children}</MainContent>;\r\n};\r\n\r\nexport default Main;\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nconst useRepeatLongPress = (\r\n  action = () => {\r\n    console.log(\"repeating your action\");\r\n  },\r\n  repeatInterval = 1000,\r\n  longPressTriggerDelay = 2000\r\n) => {\r\n  const [longPressed, setLongPressed] = useState(false);\r\n  const [repeatAction, setRepeatAction] = useState();\r\n\r\n  const actionRef = useRef(action);\r\n\r\n  const startLongPress = () => {\r\n    setLongPressed(true);\r\n    // setTimeout(() => setLongPressed(true), longPressTriggerDelay);\r\n  };\r\n\r\n  const endLongPress = () => {\r\n    setLongPressed(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (actionRef) actionRef.current = action;\r\n  });\r\n\r\n  useEffect(() => {\r\n    // console.log(\"changed\", longPressed);\r\n    if (longPressed) {\r\n      // console.log(\"longpressed HELD\");\r\n      setRepeatAction(\r\n        setInterval(() => {\r\n          // console.log(\"repeating\");\r\n          actionRef.current();\r\n        }, repeatInterval)\r\n      );\r\n    } else {\r\n      // console.log(\"Longpressed RELEASED\");\r\n\r\n      if (repeatAction) {\r\n        clearInterval(repeatAction);\r\n      }\r\n    }\r\n  }, [longPressed]);\r\n\r\n  return {\r\n    onMouseDown: (e) => startLongPress(),\r\n    onTouchStart: (e) => startLongPress(),\r\n    onMouseUp: (e) => endLongPress(),\r\n    onMouseLeave: (e) => endLongPress(),\r\n    onTouchEnd: (e) => endLongPress(),\r\n    onClick: (e) => actionRef.current(),\r\n  };\r\n};\r\n\r\nexport default useRepeatLongPress;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n// custom hooks:\r\nimport useRepeatLongPress from \"../../hooks/useRepeatLongPress\";\r\n\r\n// styles:\r\nimport {\r\n  ToolContainer,\r\n  RotateCWControl,\r\n  RotateCCWControl,\r\n  Shape,\r\n  IncreaseSize,\r\n  DecreaseSize,\r\n  HiddenHack,\r\n} from \"./ToolStyles\";\r\n\r\n// icons:\r\nimport { BiRotateLeft, BiRotateRight } from \"react-icons/bi\";\r\nimport { MdAddCircleOutline, MdRemoveCircleOutline } from \"react-icons/md\";\r\n\r\nconst ToolNode = ({\r\n  type = \"square\",\r\n  mode = \"normal\",\r\n  info,\r\n  selected,\r\n  rotateUnit = 15,\r\n  sizeUnit = 20,\r\n  ...props\r\n}) => {\r\n  const [rotateAngle, setRotateAngle] = useState(0);\r\n  const [size, setSize] = useState({ height: 60, width: 60 });\r\n\r\n  const rotateCW = () => {\r\n    setRotateAngle(rotateAngle + rotateUnit);\r\n  };\r\n\r\n  const rotateCCW = () => {\r\n    setRotateAngle(rotateAngle - rotateUnit);\r\n  };\r\n\r\n  const increaseSize = () => {\r\n    const { height, width } = size;\r\n    setSize({ height: height + sizeUnit, width: width + sizeUnit });\r\n  };\r\n\r\n  const decreaseSize = () => {\r\n    const { height, width } = size;\r\n    setSize({ height: height - sizeUnit, width: width - sizeUnit });\r\n  };\r\n\r\n  const cwLongPressAction = useRepeatLongPress(rotateCW, 200);\r\n  const ccwLongPressAction = useRepeatLongPress(rotateCCW, 200);\r\n  const increaseSizePressActions = useRepeatLongPress(increaseSize, 200);\r\n  const decreaseSizePressActions = useRepeatLongPress(decreaseSize, 200);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"TOOL NODE\", type);\r\n  }, [rotateAngle, size]);\r\n\r\n  return (\r\n    <ToolContainer {...props}>\r\n      <Shape size={size} rotateAngle={rotateAngle} type={type} info={info} />\r\n\r\n      <HiddenHack selected={selected}>\r\n        <IncreaseSize {...increaseSizePressActions}>\r\n          <MdAddCircleOutline />\r\n        </IncreaseSize>\r\n        <DecreaseSize {...decreaseSizePressActions}>\r\n          <MdRemoveCircleOutline />\r\n        </DecreaseSize>\r\n        <RotateCWControl {...cwLongPressAction}>\r\n          <BiRotateRight />\r\n        </RotateCWControl>\r\n        <RotateCCWControl {...ccwLongPressAction}>\r\n          <BiRotateLeft />\r\n        </RotateCCWControl>\r\n      </HiddenHack>\r\n    </ToolContainer>\r\n  );\r\n};\r\n\r\nconst Square = ({ selected, ...props }) => {\r\n  return <ToolNode {...props} selected={selected} type=\"square\"></ToolNode>;\r\n};\r\n\r\nconst Circle = ({ selected, ...props }) => {\r\n  return <ToolNode {...props} selected={selected} type=\"circle\"></ToolNode>;\r\n};\r\n\r\nconst HalfCircle = ({ selected, ...props }) => {\r\n  return <ToolNode {...props} selected={selected} type=\"halfCircle\"></ToolNode>;\r\n};\r\n\r\nconst Lshape = ({ selected, ...props }) => {\r\n  return <ToolNode {...props} selected={selected} type=\"lshape\"></ToolNode>;\r\n};\r\n\r\nconst Rectangle = ({ selected, ...props }) => {\r\n  return <ToolNode {...props} selected={selected} type=\"rectangle\"></ToolNode>;\r\n};\r\n\r\nexport default ToolNode;\r\nexport { Square, Circle, HalfCircle, Lshape, Rectangle };\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactFlow, { Background, MiniMap } from \"react-flow-renderer\";\r\nimport { useTheme } from \"emotion-theming\";\r\nimport { rgba } from \"emotion-rgba\";\r\nimport useResizeObserver from \"use-resize-observer\";\r\nimport { HiUser } from \"react-icons/hi\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"../../utils/draggables\";\r\nimport Tool from \"./Tool\";\r\nimport ToolNode, {\r\n  Square,\r\n  Circle,\r\n  HalfCircle,\r\n  Lshape,\r\n  Rectangle,\r\n} from \"../layout-tools/ToolNode\";\r\n\r\nconst shortid = require(\"shortid\");\r\n\r\nconst elements = [\r\n  {\r\n    type: \"halfCircle\",\r\n    id: shortid.generate(),\r\n    data: { label: \"3\" },\r\n    position: { x: 0, y: 0 },\r\n  },\r\n  {\r\n    type: \"circle\",\r\n    id: shortid.generate(),\r\n    data: { label: \"a\" },\r\n    position: { x: 240, y: 0 },\r\n  },\r\n  // you can also pass a React component as a label\r\n  {\r\n    type: \"lshape\",\r\n    id: shortid.generate(),\r\n    data: { label: <div>b</div> },\r\n    position: { x: 60, y: 40 },\r\n  },\r\n  {\r\n    type: \"square\",\r\n    id: shortid.generate(),\r\n    data: { label: <div>c</div> },\r\n    position: { x: -40, y: 80 },\r\n  },\r\n  {\r\n    type: \"circle\",\r\n    id: shortid.generate(),\r\n    data: { label: <div>d</div> },\r\n    position: { x: 120, y: 220 },\r\n  },\r\n  {\r\n    type: \"square\",\r\n    id: shortid.generate(),\r\n    data: { label: <div>d</div> },\r\n    position: { x: 120, y: 220 },\r\n  },\r\n\r\n  // { id: \"e1-2\", source: \"1\", target: \"2\", animated: true },\r\n];\r\n\r\nconst FloorMapContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  /* background-color: red; */\r\n\r\n  /* VERY IMPORTANT LINE: */\r\n  /* ensures that the right margin is accounted for it overflows */\r\n  display: inline-block;\r\n`;\r\n\r\nconst DropTarget = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst nodeTypes = {\r\n  square: Square,\r\n  circle: Circle,\r\n  halfCircle: HalfCircle,\r\n  lshape: Lshape,\r\n  test: HiUser,\r\n  rectangle: Rectangle,\r\n};\r\n\r\nconst FloorMap = () => {\r\n  const [reactFlow, setReactFlow] = useState({});\r\n  const theme = useTheme();\r\n  const fmRef = useResizeObserver();\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n  const [items, setItems] = useState(elements);\r\n  const [endDropCoords, setEndDropCoords] = useState({ x: 0, y: 0 });\r\n\r\n  const [{ item, isOver, didDrop, ...addedProps }, drop] = useDrop({\r\n    accept: ItemTypes.TOOL,\r\n    // hover: (item, monitor) => {\r\n    //   const fin = monitor.getClientOffset();\r\n\r\n    //   const diffX = Math.abs(endDropCoords.x - fin.x);\r\n    //   const diffY = Math.abs(endDropCoords.y - fin.y);\r\n\r\n    //   if (diffX > 5 || diffY > 5) {\r\n    //     setEndDropCoords({ x: fin.x - offset.x, y: fin.y - offset.y });\r\n    //   }\r\n    // },\r\n    collect: (monitor, componen) => ({\r\n      isOver: monitor.isOver(),\r\n      didDrop: monitor.didDrop(),\r\n      item: monitor.getItem(),\r\n    }),\r\n    drop: (props, monitor, component) => {\r\n      const fin = monitor.getClientOffset();\r\n\r\n      // const diffX = Math.abs(endDropCoords.x - fin.x);\r\n      // const diffY = Math.abs(endDropCoords.y - fin.y);\r\n\r\n      // if (diffX > 5 || diffY > 5) {\r\n      setEndDropCoords({ x: fin.x - offset.x, y: fin.y - offset.y });\r\n      // }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"didDrop\", didDrop, item);\r\n    if (item) {\r\n      const newItem = {\r\n        type: item.data.data.type,\r\n        id: shortid.generate(),\r\n        data: item.data.data,\r\n        position: reactFlow.project(endDropCoords),\r\n      };\r\n      console.log(\"newItem\", newItem);\r\n      setItems([...items, newItem]);\r\n    }\r\n  }, [didDrop]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"isOver\", isOver, item);\r\n  }, [isOver]);\r\n\r\n  useEffect(() => {\r\n    if (fmRef) {\r\n      const { x, y } = fmRef.ref.current.getBoundingClientRect();\r\n      setOffset({ x, y });\r\n    }\r\n  }, [fmRef]);\r\n\r\n  const onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n    reactFlowInstance.zoomTo(1);\r\n    setReactFlow(reactFlowInstance);\r\n  };\r\n\r\n  return (\r\n    <FloorMapContainer ref={fmRef.ref}>\r\n      <DropTarget ref={drop}>\r\n        <ReactFlow\r\n          onLoad={onLoad}\r\n          elements={items}\r\n          // snapToGrid\r\n          nodeTypes={nodeTypes}\r\n          snapGrid={[theme.dimensions.gridUnit, theme.dimensions.gridUnit]}\r\n          // translateExtent={[\r\n          //   [0, 0],\r\n          //   [500, 500],\r\n          // ]}\r\n        >\r\n          <Background\r\n            variant=\"dots\"\r\n            gap={theme.dimensions.gridUnit}\r\n            color={rgba(theme.colors.onBackground, 0.3)}\r\n            size={1}\r\n          />\r\n\r\n          <MiniMap\r\n            nodeColor={(node) => {\r\n              switch (node.type) {\r\n                case \"input\":\r\n                  return \"red\";\r\n                case \"default\":\r\n                  return \"#00ff00\";\r\n                case \"output\":\r\n                  return \"rgb(0,0,255)\";\r\n                default:\r\n                  return \"#eee\";\r\n              }\r\n            }}\r\n          />\r\n        </ReactFlow>\r\n      </DropTarget>\r\n    </FloorMapContainer>\r\n  );\r\n};\r\n\r\nexport default FloorMap;\r\n","import React from \"react\";\r\n\r\nimport FloorMap from \"../components/layout-tools/FloorMap\";\r\n\r\nconst SeatingLayout = () => {\r\n  return (\r\n    // <div>\r\n    <FloorMap />\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default SeatingLayout;\r\n","import React from \"react\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Settings = () => {\r\n  return <div>SEttings</div>;\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n// styling:\r\n/** @jsx jsx */\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport { useTheme } from \"emotion-theming\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n// custom components:\r\nimport ToggleButton from \"./components/buttons/ToggleButton\";\r\nimport Button from \"./components/buttons/Button\";\r\nimport FormInput from \"./components/inputs/FormInput\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Main from \"./components/Main\";\r\n\r\n// page components:\r\nimport SeatingLayout from \"./pages/SeatingLayout\";\r\nimport Settings from \"./pages/Settings\";\r\n\r\n// icons:\r\nimport { MdBrightnessLow } from \"react-icons/md\";\r\nimport { SiGoogle as GoogleLogoIcon } from \"react-icons/si\";\r\n\r\nconst AppContainer = styled.section`\r\n  background-color: ${(props) => props.theme.colors.background};\r\n\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  overflow: auto;\r\n\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > * {\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n\r\nconst FlexWrapper = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 500px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst App = ({ ...props }) => {\r\n  const theme = useTheme();\r\n\r\n  useEffect(() => {\r\n    // console.log(\"UE1\");\r\n  }, [theme]);\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <AppContainer>\r\n        <Helmet>\r\n          <meta name=\"theme-color\" content={theme.colors.primary} />\r\n        </Helmet>\r\n\r\n        <BrowserRouter basename=\"/w8er\">\r\n          <FlexWrapper>\r\n            <Sidebar />\r\n            <Main>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={SeatingLayout} />\r\n                <Route exact path=\"/seating-layout\" component={SeatingLayout} />\r\n                <Route exact path=\"/settings\" component={Settings} />\r\n              </Switch>\r\n            </Main>\r\n          </FlexWrapper>\r\n        </BrowserRouter>\r\n      </AppContainer>\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useEffect } from \"react\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\n\r\n// state management:\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { themeState } from \"./recoil/ThemeState\";\r\n\r\n// custom components:\r\nimport App from \"./App\";\r\n\r\n// styling:\r\nimport { Global, css } from \"@emotion/core\";\r\nimport { ThemeProvider, useTheme } from \"emotion-theming\";\r\n\r\n// export interface Theme {\r\n//   colors: {\r\n//     primary: String,\r\n//     secondary: String,\r\n\r\n//     background: String,\r\n//     surface: String,\r\n\r\n//     onPrimary: String,\r\n//     onSecondary: String,\r\n\r\n//     onBackground: String,\r\n//     onSurface: String,\r\n\r\n//     error: String,\r\n//   };\r\n//   font: Font;\r\n//   breakpoints?: {\r\n//     xs: String,\r\n//     x: String,\r\n//     m: String,\r\n//     l: String,\r\n//     xl: String,\r\n//   };\r\n// }\r\n\r\nconst baseFont = {\r\n  size: \"14px\",\r\n  family: \"Noto Sans, sans-serif\",\r\n  weight: \"normal\",\r\n};\r\n\r\nconst dimensions = {\r\n  gridUnit: 20,\r\n};\r\n\r\nconst themeDark = {\r\n  colors: {\r\n    // primary: \"#afb9f1\",\r\n    primary: \"#54a0ff\",\r\n    secondary: \"#e87b9b\",\r\n\r\n    background: \"#373e4d\",\r\n    surface: \"#444c60\",\r\n\r\n    // onPrimary: \"#373e4d\",\r\n    onPrimary: \"white\",\r\n    onSecondary: \"white\",\r\n\r\n    onBackground: \"white\",\r\n    onSurface: \"white\",\r\n\r\n    outline: \"#575e70\",\r\n\r\n    error: \"#ff6b6b\",\r\n    correct: \"#37d7b2\",\r\n    warning: \"#fee257\",\r\n  },\r\n  font: baseFont,\r\n  dimensions: dimensions,\r\n};\r\n\r\nconst themeLight = {\r\n  colors: {\r\n    // primary: \"#e87b9b\",\r\n    primary: \"#54a0ff\",\r\n    secondary: \"#afb9f1\",\r\n\r\n    // background: \"#e5e5e5\",\r\n    background: \"#f1f3f4\",\r\n\r\n    surface: \"white\",\r\n\r\n    onPrimary: \"white\",\r\n    onSecondary: \"black\",\r\n\r\n    onBackground: \"#3e3e3e\",\r\n    // onSurface: \"#e5e5e5\",\r\n    onSurface: \"#f1f3f4\",\r\n\r\n    outline: \"#ebebeb\",\r\n\r\n    error: \"#ff6b6b\",\r\n    correct: \"#37d7b2\",\r\n    warning: \"#fee257\",\r\n  },\r\n  font: baseFont,\r\n  dimensions: dimensions,\r\n};\r\n\r\nconst GlobalReset = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Global\r\n      styles={css`\r\n        * {\r\n          box-sizing: border-box;\r\n          margin: 0;\r\n          padding: 0;\r\n\r\n          font-family: ${theme.font.family};\r\n          font-size: ${theme.font.size};\r\n          font-weight: ${theme.font.weight};\r\n          color: ${theme.colors.onPrimary};\r\n\r\n          transition: background-color 250ms ease-out;\r\n        }\r\n\r\n        html {\r\n          width: 100%;\r\n          height: 100%;\r\n\r\n          body {\r\n            height: 100%;\r\n            width: 100%;\r\n\r\n            display: flex;\r\n            flex-direction: column;\r\n\r\n            #root {\r\n              width: 100%;\r\n              flex-grow: 1;\r\n\r\n              /* CHANGE BG GRADIENTS HERE: */\r\n              /* background: linear-gradient(\r\n                45deg,\r\n                rgba(28, 73, 219, 0.2) 0%,\r\n                rgba(191, 96, 255, 0.2) 100%\r\n              ); */\r\n\r\n              /* OR */\r\n\r\n              /* CHANGE BG COLOR HERE: */\r\n              background-color: red;\r\n            }\r\n          }\r\n        }\r\n\r\n        a,\r\n        a:link,\r\n        a:visited,\r\n        a:hover,\r\n        a:active {\r\n          cursor: pointer;\r\n          text-decoration: none;\r\n          color: ${theme.colors.primary};\r\n        }\r\n\r\n        ul,\r\n        ol {\r\n          list-style-type: none;\r\n        }\r\n\r\n        button {\r\n          border: 0;\r\n          cursor: pointer;\r\n        }\r\n\r\n        button:active,\r\n        button:focus {\r\n          outline: 0;\r\n          /* outline: 1px solid red; */\r\n        }\r\n\r\n        input {\r\n          border: 0;\r\n          outline: 0;\r\n        }\r\n      `}\r\n    />\r\n  );\r\n};\r\n\r\nconst ThemedApp = () => {\r\n  // const darkTheme = useRecoilValue(themeState);\r\n  const lightTheme = useRecoilValue(themeState);\r\n\r\n  return (\r\n    <ThemeProvider theme={lightTheme ? themeLight : themeDark}>\r\n      <GlobalReset />\r\n      <HelmetProvider>\r\n        <App />\r\n      </HelmetProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ThemedApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nimport \"./index.css\";\nimport ThemedApp from \"./Theme\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemedApp />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}